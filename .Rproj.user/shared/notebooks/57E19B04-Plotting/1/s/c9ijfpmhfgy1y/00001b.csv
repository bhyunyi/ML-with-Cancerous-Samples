"0","library(ggplot2)"
"0",""
"0","# Set data, make sure it is only the significant genes that are also transcription factors!"
"0","sig_tf_pca <- as.data.frame(sig_gene_data %>% filter(GeneID %in% tf_list))"
"0",""
"0","# Set rownames and drop GeneID column"
"0","rownames(sig_tf_pca) <- sig_tf_pca$GeneID"
"0",""
"0","# This is an expressiong df of just genes that are transcription factors"
"0","sig_tf_pca <- sig_tf_pca[, -which(names(sig_tf_pca) == ""GeneID"")]"
"0",""
"0","sig_tf_pca <- t(sig_tf_pca)  # Samples need to be rows"
"0",""
"0","# PCA"
"0","pca_result <- prcomp(sig_tf_pca, center = TRUE, scale. = TRUE)"
"0",""
"0","#Make it a dataframe"
"0","pca_df <- as.data.frame(pca_result$x) "
"0","pca_df$SampleID <- rownames(pca_df) # Add some rownames"
"0","# Add CancerStatus from annotation_df by rownames"
"0","pca_df$CancerType <- annotation_df[pca_df$SampleID, ""type""]"
"0",""
"0",""
"0","# Plot"
"0","ggplot(pca_df, aes(x = PC1, y = PC2, color = CancerType)) +"
"0","  geom_point(size = 3) +"
"0","  theme_minimal() +"
"0","  labs(title = ""PCA of Significant Genes That are Transcription Factors"","
"0","       x = paste0(""PC1 ("", round(summary(pca_result)$importance[2,1]*100, 1), ""%)""),"
"0","       y = paste0(""PC2 ("", round(summary(pca_result)$importance[2,2]*100, 1), ""%)""))"
